name: End-to-End Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: "10.5.2"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      # Create required directories
      - name: Create logs and screenshots directories
        run: |
          mkdir -p e2e-tests/logs
          mkdir -p e2e-tests/screenshots
          rm -f e2e-tests/screenshots/*.png
          rm -f e2e-tests/logs/*.log

      # Install dependencies for all components
      - name: Install backend dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Install e2e-tests dependencies
        working-directory: ./e2e-tests
        run: pnpm install

      - name: Install Playwright browsers
        working-directory: ./e2e-tests
        run: pnpm exec playwright install --with-deps chromium

      # Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: pnpm run build

      # Build e2e-tests
      - name: Build e2e-tests
        working-directory: ./e2e-tests
        run: pnpm run build

      # Start services
      - name: Start backend server
        working-directory: ./backend
        run: |
          # Configure backend with correct CORS settings for the GitHub Actions environment
          USE_MOCK_JIRA=true USE_IN_MEMORY_DB=true CORS_ORIGINS='["http://localhost:5173"]' python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 > ../e2e-tests/logs/backend.log 2>&1 &
          echo $! > ../.backend_pid
          # Give backend time to start
          sleep 5
          # Check if backend is running
          curl -s http://localhost:8000/docs || (cat ../e2e-tests/logs/backend.log && exit 1)

      - name: Start frontend server
        working-directory: ./frontend
        run: |
          # Use port 5173 for GitHub Actions (non-privileged port)
          pnpm run preview --port 5173 > ../e2e-tests/logs/frontend.log 2>&1 &
          echo $! > ../.frontend_pid
          # Give frontend time to start
          sleep 5
          # Check if frontend is running
          curl -s http://localhost:5173 || (cat ../e2e-tests/logs/frontend.log && exit 1)

      # Run tests with environment variables for host/port configuration
      - name: Run end-to-end tests
        working-directory: ./e2e-tests
        env:
          TEST_HOST: localhost
          TEST_PORT: 5173
          CI: true
          PLAYWRIGHT_CONFIG_PATH: dist/playwright.config.js
        run: |
          pnpm exec playwright test --config=dist/playwright.config.js

      # Upload artifacts for debugging
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e-tests/playwright-report/
          retention-days: 30

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: e2e-tests/screenshots/
          retention-days: 30

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: e2e-tests/logs/
          retention-days: 30

      # Cleanup
      - name: Stop servers
        if: always()
        run: |
          if [ -f .backend_pid ]; then
            kill $(cat .backend_pid) || true
          fi
          if [ -f .frontend_pid ]; then
            kill $(cat .frontend_pid) || true
          fi
